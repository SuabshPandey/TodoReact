{"version":3,"sources":["components/ToDoItem.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","App","useState","inputText","setInputText","items","setItems","deleteItem","prevItems","filter","item","index","className","onChange","event","newValue","target","value","type","required","map","todoItem","ReactDOM","render","document","getElementById"],"mappings":"kKAceA,MAZf,SAAkBC,GAChB,OACE,qBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,KAF1B,SAKE,6BAAKH,EAAMI,UC6CFC,MAnDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAgBb,SAASC,EAAWR,GAClBO,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUZ,QAKvB,OACE,sBAAKa,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,sBAAKA,UAAU,OAAf,UACE,uBAAOC,SA1Bb,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9Bb,EAAaW,IAwBsBG,KAAK,OAAOD,MAAOd,EAAWgB,UAAQ,IACrE,wBAAQtB,QAtBd,WACES,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBL,OAExBC,EAAa,KAkBT,SACE,4CAGJ,8BACE,6BACGC,EAAMe,KAAI,SAACC,EAAUV,GAAX,OACT,cAAC,EAAD,CAEEZ,GAAIY,EACJX,KAAMqB,EACNvB,UAAWS,GAHNI,cCtCnBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5fff8fd4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        props.onChecked(props.id);\r\n      }}\r\n    >\r\n      <li>{props.text}</li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { useState } from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  function addItem() {\r\n    setItems(prevItems => {\r\n      return [...prevItems, inputText];\r\n    });\r\n    setInputText(\"\");\r\n  }\r\n\r\n  function deleteItem(id) {\r\n    setItems(prevItems => {\r\n      return prevItems.filter((item, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h1>To-Do List</h1>\r\n      </div>\r\n      <div className=\"form\">\r\n        <input onChange={handleChange} type=\"text\" value={inputText} required/>\r\n        <button onClick={addItem}>\r\n          <span>Add</span>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ul>\r\n          {items.map((todoItem, index) => (\r\n            <ToDoItem\r\n              key={index}\r\n              id={index}\r\n              text={todoItem}\r\n              onChecked={deleteItem}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}